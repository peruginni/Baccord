
/*
 * SfmSetup.java
 *
 * Created on Mar 9, 2011, 1:17:54 PM
 */

package baccord.ui;

import baccord.BaccordApp;
import baccord.business.images.ImageFolders;
import baccord.business.images.ImageManager;
import baccord.business.sfm.StructureFromMotion;
import com.google.inject.Inject;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Ond≈ôej Macoszek <ondra@macoszek.cz>
 */
public class SfmSetup extends BaseUi
{
	@Inject private StructureFromMotion sfm;
	@Inject private ImageManager imageManager;
	@Inject private ImageFolders imageFolders;
	
	public SfmSetup() 
	{
		initComponents();
	}

	@Override
	public void start()
	{
		super.start();
		
		inputImagesTextField.setText(sfm.getImageDirectory());
		bundlerOptionsTextPane.setText(sfm.getOptions());
	}
	
	

	
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        runButton = new javax.swing.JButton();
        horizontalSeparator = new javax.swing.JSeparator();
        sfmTitle = new javax.swing.JLabel();
        inputImagesTextField = new javax.swing.JTextField();
        inputImagesButton = new javax.swing.JButton();
        inputImagesLabel = new javax.swing.JLabel();
        ccdLabel = new javax.swing.JTextArea();
        ccdButton = new javax.swing.JButton();
        bundlerOptionsLabel = new javax.swing.JLabel();
        bundlerOptionsScrollPane = new javax.swing.JScrollPane();
        bundlerOptionsTextPane = new javax.swing.JTextPane();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(baccord.BaccordApp.class).getContext().getResourceMap(SfmSetup.class);
        runButton.setFont(resourceMap.getFont("runButton.font")); // NOI18N
        runButton.setText(resourceMap.getString("runButton.text")); // NOI18N
        runButton.setName("runButton"); // NOI18N
        runButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                runButtonMouseClicked(evt);
            }
        });

        horizontalSeparator.setName("horizontalSeparator"); // NOI18N

        sfmTitle.setBackground(resourceMap.getColor("sectionTitle.background")); // NOI18N
        sfmTitle.setFont(resourceMap.getFont("sectionTitle.font")); // NOI18N
        sfmTitle.setText(resourceMap.getString("sfmTitle.text")); // NOI18N
        sfmTitle.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        sfmTitle.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        sfmTitle.setName("sfmTitle"); // NOI18N
        sfmTitle.setOpaque(true);

        inputImagesTextField.setText(resourceMap.getString("inputImagesTextField.text")); // NOI18N
        inputImagesTextField.setName("inputImagesTextField"); // NOI18N

        inputImagesButton.setText(resourceMap.getString("inputImagesButton.text")); // NOI18N
        inputImagesButton.setName("inputImagesButton"); // NOI18N
        inputImagesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inputImagesButtonMouseClicked(evt);
            }
        });

        inputImagesLabel.setText(resourceMap.getString("inputImagesLabel.text")); // NOI18N
        inputImagesLabel.setName("inputImagesLabel"); // NOI18N

        ccdLabel.setColumns(20);
        ccdLabel.setFont(resourceMap.getFont("ccdLabel.font")); // NOI18N
        ccdLabel.setLineWrap(true);
        ccdLabel.setRows(3);
        ccdLabel.setText(resourceMap.getString("ccdLabel.text")); // NOI18N
        ccdLabel.setBorder(null);
        ccdLabel.setName("ccdLabel"); // NOI18N
        ccdLabel.setOpaque(false);

        ccdButton.setText(resourceMap.getString("ccdButton.text")); // NOI18N
        ccdButton.setName("ccdButton"); // NOI18N
        ccdButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ccdButtonMouseClicked(evt);
            }
        });

        bundlerOptionsLabel.setText(resourceMap.getString("bundlerOptionsLabel.text")); // NOI18N
        bundlerOptionsLabel.setName("bundlerOptionsLabel"); // NOI18N

        bundlerOptionsScrollPane.setName("bundlerOptionsScrollPane"); // NOI18N

        bundlerOptionsTextPane.setName("bundlerOptionsTextPane"); // NOI18N
        bundlerOptionsScrollPane.setViewportView(bundlerOptionsTextPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ccdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ccdButton))
                            .addComponent(sfmTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE))
                        .addContainerGap(22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bundlerOptionsLabel)
                        .addContainerGap(550, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bundlerOptionsScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
                            .addComponent(horizontalSeparator, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(inputImagesLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(inputImagesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputImagesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(runButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sfmTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputImagesLabel)
                    .addComponent(inputImagesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputImagesButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ccdButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ccdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(bundlerOptionsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bundlerOptionsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(horizontalSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(runButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ccdButtonMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_ccdButtonMouseClicked
    {//GEN-HEADEREND:event_ccdButtonMouseClicked
	    String cameraName = null;
	    Double cameraWidth = null;
	    
	    cameraName = JOptionPane.showInputDialog("Camera name");
	    
	    if(cameraName == null || cameraName.isEmpty()) {
		    Dialog.error(this, "Camera name need to be filled."); 
		    return;
	    }
	    
	    try {
		    cameraWidth = Double.valueOf(JOptionPane.showInputDialog("Camera width"));
	    } catch(NumberFormatException ex) {
		    cameraWidth = null;
	    }
	    
	    if(cameraWidth == null) {
		    Dialog.error(this, "Camera width need to be filled"); 
		    return;
	    }
	    
	    imageManager.addCcdWidth(cameraName, cameraWidth.doubleValue());
	    
	    Dialog.notice(this, "New camera added");
    }//GEN-LAST:event_ccdButtonMouseClicked

    private void inputImagesButtonMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_inputImagesButtonMouseClicked
    {//GEN-HEADEREND:event_inputImagesButtonMouseClicked
	    String path = Dialog.askForPath(this, JFileChooser.DIRECTORIES_ONLY);
	    if(path != null) {
		    inputImagesTextField.setText(path);
	    }
    }//GEN-LAST:event_inputImagesButtonMouseClicked

    private void runButtonMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_runButtonMouseClicked
    {//GEN-HEADEREND:event_runButtonMouseClicked
	    String inputDir = inputImagesTextField.getText();
	    
	    if(inputDir == null || inputDir.isEmpty()) {
		    Dialog.error(this, "Fill directory with input images");
		    return;
	    } else {
		    sfm.loadImagesFromDirectory(inputDir);
		    imageFolders.saveRecentlyUsed(inputDir);
	    }
	    
	    sfm.setOptions(bundlerOptionsTextPane.getText());
	    
	    BaccordApp.getApplication().changeScreen(SfmProgress.class);
    }//GEN-LAST:event_runButtonMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bundlerOptionsLabel;
    private javax.swing.JScrollPane bundlerOptionsScrollPane;
    private javax.swing.JTextPane bundlerOptionsTextPane;
    private javax.swing.JButton ccdButton;
    private javax.swing.JTextArea ccdLabel;
    private javax.swing.JSeparator horizontalSeparator;
    private javax.swing.JButton inputImagesButton;
    private javax.swing.JLabel inputImagesLabel;
    private javax.swing.JTextField inputImagesTextField;
    private javax.swing.JButton runButton;
    private javax.swing.JLabel sfmTitle;
    // End of variables declaration//GEN-END:variables

}
