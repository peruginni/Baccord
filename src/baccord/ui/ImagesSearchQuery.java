
/*
 * ImagesSearchQuery.java
 *
 * Created on Mar 7, 2011, 4:39:42 PM
 */

package baccord.ui;

import baccord.BaccordApp;
import baccord.business.downloader.DownloadManager;
import baccord.business.images.Editor;
import baccord.business.search.ImageSearch;
import baccord.business.search.SearchQuery;
import baccord.business.search.SearchQuery.GeoContext;
import baccord.exceptions.CannotCreateDirectoryException;
import baccord.exceptions.PathMustBeDirectoryException;
import com.google.inject.Inject;
import java.awt.Dimension;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JTextField;

/**
 *
 * @author Ond≈ôej Macoszek <ondra@macoszek.cz>
 */
public class ImagesSearchQuery extends BaseUi 
{
	@Inject private ImageSearch imageSearch;
	@Inject private DownloadManager downloadManager;
	@Inject private Editor editor;
	
	private String defaultKeyword;
	int[] perPageRange = {10, 50, 100, 200, 300, 400, 500};
	
	
	/** Creates new form ImagesSearchQuery */
	public ImagesSearchQuery() 
	{
		initComponents();
	}
	
	public String getDefaultKeyword()
	{
		return this.defaultKeyword;
	}
	
	public void setDefaultKeyword(String defaultKeyword)
	{
		this.defaultKeyword = defaultKeyword;
	}
	
	@Override
	public void init()
	{
		super.init();
		
		try {
			downloadManager.setDownloadDirectory("/Users/peruginni/Downloads/Bac");
		} catch (CannotCreateDirectoryException ex) {
			Logger.getLogger(ImagesSearchQuery.class.getName()).log(Level.SEVERE, null, ex);
		} catch (PathMustBeDirectoryException ex) {
			Logger.getLogger(ImagesSearchQuery.class.getName()).log(Level.SEVERE, null, ex);
		}
		
		SearchQuery query = imageSearch.getCurrentQuery();
		if(query != null) {
			keywordsTextfield.setText(query.getKeywords());
			
			gpsLatTextfield.setText(query.getGpsLatitude());
			gpsLonTextfield.setText(query.getGpsLongitude());
			gpsRadiusTextfield.setText(""+query.getGpsRadius());
			
			// setup per page
			int resultsPerPage = perPageRange[0];
			query.setResultsPerPage(resultsPerPage);

			for (int i : perPageRange) {
				perPageCombobox.addItem(""+i+" per page");
			} 
			perPageCombobox.setSelectedIndex(0);
			
			query.setPage(1);
		}
		
		downloadFolderTextfield.setText(
			downloadManager.getDownloadDirectory()
		);
		
		siftCheckbox.setSelected(
			editor.getAutoSift()
		);
		
		Dimension dimension = editor.getAutoResizeDimension();
		if(dimension != null) {
			resizeCheckbox.setSelected(true);
			widthTextField.setText(""+dimension.width);
			heightTextField.setText(""+dimension.height);
		}
		
		if(defaultKeyword != null) {
			keywordsTextfield.setText(defaultKeyword);
			defaultKeyword = null;
		}
		
	}
	
	public void saveCurrentQuery() throws CannotCreateDirectoryException, PathMustBeDirectoryException
	{
		SearchQuery query = imageSearch.getCurrentQuery();
		if(query == null) {
			query = new SearchQuery();
			imageSearch.setCurrentQuery(query);
		}
		
		query.setKeywords(keywordsTextfield.getText());
		
		query.setGpsLatitude(gpsLatTextfield.getText());
		query.setGpsLongitude(gpsLonTextfield.getText());
		query.setGpsRadius(Integer.parseInt(gpsRadiusTextfield.getText()));
		
		downloadManager.setDownloadDirectory(
			downloadFolderTextfield.getText()
		);

		editor.setAutoSift(siftCheckbox.isSelected());
		
		if(resizeCheckbox.isSelected()) {
			editor.setAutoResizeDimension(
				new Dimension(
					Integer.parseInt(widthTextField.getText()),
					Integer.parseInt(heightTextField.getText())
				)	
			);
		} else {
			editor.setAutoResizeDimension(null);
		}
	}
	

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                downloadOptionsTitle = new javax.swing.JLabel();
                siftPanel = new javax.swing.JPanel();
                siftCheckbox = new javax.swing.JCheckBox();
                dimensionsPanel = new javax.swing.JPanel();
                resizeCheckbox = new javax.swing.JCheckBox();
                widthTextField = new javax.swing.JTextField();
                heightTextField = new javax.swing.JTextField();
                xLabel = new javax.swing.JLabel();
                horizontalSeparator = new javax.swing.JSeparator();
                searchButton = new javax.swing.JButton();
                downloadProgressButton = new javax.swing.JButton();
                searchPhotosTitle = new javax.swing.JLabel();
                perPageCombobox = new javax.swing.JComboBox();
                downloadFolderPanel = new javax.swing.JPanel();
                downloadFolderLabel = new javax.swing.JLabel();
                downloadFolderButton = new javax.swing.JButton();
                downloadFolderTextfield = new javax.swing.JTextField();
                datePanel = new javax.swing.JPanel();
                takenDateFromSpinner = new javax.swing.JSpinner();
                uploadedDateFromSpinner = new javax.swing.JSpinner();
                uploadedDateSeparator = new javax.swing.JLabel();
                takenDateSeparator = new javax.swing.JLabel();
                takenDateTillSpinner = new javax.swing.JSpinner();
                uploadedDateTillSpinner = new javax.swing.JSpinner();
                takenDateCheckbox = new javax.swing.JCheckBox();
                uploadedDateCheckbox = new javax.swing.JCheckBox();
                gpsPanel = new javax.swing.JPanel();
                gpsLabel = new javax.swing.JLabel();
                gpsLatTextfield = new javax.swing.JTextField();
                gpsLonTextfield = new javax.swing.JTextField();
                gpsRadiusTextfield = new javax.swing.JTextField();
                gpsLabel1 = new javax.swing.JLabel();
                gpsLabel2 = new javax.swing.JLabel();
                gpsLabel3 = new javax.swing.JLabel();
                keywordsPanel = new javax.swing.JPanel();
                keywordsLabel = new javax.swing.JLabel();
                keywordsTextfield = new javax.swing.JTextField();

                setName("Form"); // NOI18N

                org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(baccord.BaccordApp.class).getContext().getResourceMap(ImagesSearchQuery.class);
                downloadOptionsTitle.setBackground(resourceMap.getColor("sectionTitle.background")); // NOI18N
                downloadOptionsTitle.setFont(resourceMap.getFont("sectionTitle.font")); // NOI18N
                downloadOptionsTitle.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                downloadOptionsTitle.setText(resourceMap.getString("downloadOptionsTitle.text")); // NOI18N
                downloadOptionsTitle.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
                downloadOptionsTitle.setName("downloadOptionsTitle"); // NOI18N
                downloadOptionsTitle.setOpaque(true);

                siftPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
                siftPanel.setName("siftPanel"); // NOI18N

                siftCheckbox.setText(resourceMap.getString("siftCheckbox.text")); // NOI18N
                siftCheckbox.setMargin(new java.awt.Insets(1, 0, 0, 1));
                siftCheckbox.setName("siftCheckbox"); // NOI18N

                javax.swing.GroupLayout siftPanelLayout = new javax.swing.GroupLayout(siftPanel);
                siftPanel.setLayout(siftPanelLayout);
                siftPanelLayout.setHorizontalGroup(
                        siftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(siftPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(siftCheckbox)
                                .addContainerGap(116, Short.MAX_VALUE))
                );
                siftPanelLayout.setVerticalGroup(
                        siftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, siftPanelLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(siftCheckbox)
                                .addGap(48, 48, 48))
                );

                dimensionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
                dimensionsPanel.setName("dimensionsPanel"); // NOI18N

                resizeCheckbox.setText(resourceMap.getString("resizeCheckbox.text")); // NOI18N
                resizeCheckbox.setMargin(new java.awt.Insets(1, 0, 0, 1));
                resizeCheckbox.setName("resizeCheckbox"); // NOI18N
                resizeCheckbox.addChangeListener(new javax.swing.event.ChangeListener() {
                        public void stateChanged(javax.swing.event.ChangeEvent evt) {
                                resizeCheckboxStateChanged(evt);
                        }
                });

                widthTextField.setText(resourceMap.getString("widthTextField.text")); // NOI18N
                widthTextField.setEnabled(false);
                widthTextField.setName("widthTextField"); // NOI18N
                widthTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusLost(java.awt.event.FocusEvent evt) {
                                numberTextFieldFocusLost(evt);
                        }
                });

                heightTextField.setText(resourceMap.getString("heightTextField.text")); // NOI18N
                heightTextField.setEnabled(false);
                heightTextField.setName("heightTextField"); // NOI18N
                heightTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusLost(java.awt.event.FocusEvent evt) {
                                numberTextFieldFocusLost(evt);
                        }
                });

                xLabel.setText(resourceMap.getString("xLabel.text")); // NOI18N
                xLabel.setName("xLabel"); // NOI18N

                javax.swing.GroupLayout dimensionsPanelLayout = new javax.swing.GroupLayout(dimensionsPanel);
                dimensionsPanel.setLayout(dimensionsPanelLayout);
                dimensionsPanelLayout.setHorizontalGroup(
                        dimensionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(dimensionsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(dimensionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(resizeCheckbox)
                                        .addGroup(dimensionsPanelLayout.createSequentialGroup()
                                                .addComponent(widthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(xLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(heightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
                );
                dimensionsPanelLayout.setVerticalGroup(
                        dimensionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(dimensionsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(resizeCheckbox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(dimensionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(widthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(heightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(xLabel))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                horizontalSeparator.setName("horizontalSeparator"); // NOI18N

                searchButton.setFont(resourceMap.getFont("searchButton.font")); // NOI18N
                searchButton.setText(resourceMap.getString("searchButton.text")); // NOI18N
                searchButton.setName("searchButton"); // NOI18N
                searchButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                searchButtonActionPerformed(evt);
                        }
                });

                downloadProgressButton.setText(resourceMap.getString("downloadProgressButton.text")); // NOI18N
                downloadProgressButton.setName("downloadProgressButton"); // NOI18N
                downloadProgressButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                downloadProgressButtonActionPerformed(evt);
                        }
                });

                searchPhotosTitle.setBackground(resourceMap.getColor("sectionTitle.background")); // NOI18N
                searchPhotosTitle.setFont(resourceMap.getFont("sectionTitle.font")); // NOI18N
                searchPhotosTitle.setText(resourceMap.getString("searchPhotosTitle.text")); // NOI18N
                searchPhotosTitle.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
                searchPhotosTitle.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
                searchPhotosTitle.setName("searchPhotosTitle"); // NOI18N
                searchPhotosTitle.setOpaque(true);

                perPageCombobox.setName("perPageCombobox"); // NOI18N
                perPageCombobox.addItemListener(new java.awt.event.ItemListener() {
                        public void itemStateChanged(java.awt.event.ItemEvent evt) {
                                perPageComboboxItemStateChanged(evt);
                        }
                });

                downloadFolderPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
                downloadFolderPanel.setName("downloadFolderPanel"); // NOI18N

                downloadFolderLabel.setText(resourceMap.getString("downloadFolderLabel.text")); // NOI18N
                downloadFolderLabel.setName("downloadFolderLabel"); // NOI18N

                downloadFolderButton.setText(resourceMap.getString("downloadFolderButton.text")); // NOI18N
                downloadFolderButton.setName("downloadFolderButton"); // NOI18N
                downloadFolderButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                downloadFolderButtonActionPerformed(evt);
                        }
                });

                downloadFolderTextfield.setText(resourceMap.getString("downloadFolderTextfield.text")); // NOI18N
                downloadFolderTextfield.setName("downloadFolderTextfield"); // NOI18N

                javax.swing.GroupLayout downloadFolderPanelLayout = new javax.swing.GroupLayout(downloadFolderPanel);
                downloadFolderPanel.setLayout(downloadFolderPanelLayout);
                downloadFolderPanelLayout.setHorizontalGroup(
                        downloadFolderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(downloadFolderPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(downloadFolderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(downloadFolderTextfield, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, downloadFolderPanelLayout.createSequentialGroup()
                                                .addComponent(downloadFolderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(downloadFolderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
                );
                downloadFolderPanelLayout.setVerticalGroup(
                        downloadFolderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(downloadFolderPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(downloadFolderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(downloadFolderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(downloadFolderButton))
                                .addGap(1, 1, 1)
                                .addComponent(downloadFolderTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                );

                datePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
                datePanel.setName("datePanel"); // NOI18N

                takenDateFromSpinner.setModel(new javax.swing.SpinnerDateModel());
                takenDateFromSpinner.setEnabled(false);
                takenDateFromSpinner.setName("takenDateFromSpinner"); // NOI18N

                uploadedDateFromSpinner.setModel(new javax.swing.SpinnerDateModel());
                uploadedDateFromSpinner.setEnabled(false);
                uploadedDateFromSpinner.setName("uploadedDateFromSpinner"); // NOI18N

                uploadedDateSeparator.setText(resourceMap.getString("uploadedDateSeparator.text")); // NOI18N
                uploadedDateSeparator.setName("uploadedDateSeparator"); // NOI18N

                takenDateSeparator.setText(resourceMap.getString("takenDateSeparator.text")); // NOI18N
                takenDateSeparator.setName("takenDateSeparator"); // NOI18N

                takenDateTillSpinner.setModel(new javax.swing.SpinnerDateModel());
                takenDateTillSpinner.setEnabled(false);
                takenDateTillSpinner.setName("takenDateTillSpinner"); // NOI18N

                uploadedDateTillSpinner.setModel(new javax.swing.SpinnerDateModel());
                uploadedDateTillSpinner.setEnabled(false);
                uploadedDateTillSpinner.setName("uploadedDateTillSpinner"); // NOI18N

                takenDateCheckbox.setText(resourceMap.getString("takenDateCheckbox.text")); // NOI18N
                takenDateCheckbox.setMargin(new java.awt.Insets(1, 0, 0, 1));
                takenDateCheckbox.setName("takenDateCheckbox"); // NOI18N
                takenDateCheckbox.addChangeListener(new javax.swing.event.ChangeListener() {
                        public void stateChanged(javax.swing.event.ChangeEvent evt) {
                                takenDateCheckboxStateChanged(evt);
                        }
                });

                uploadedDateCheckbox.setText(resourceMap.getString("uploadedDateCheckbox.text")); // NOI18N
                uploadedDateCheckbox.setMargin(new java.awt.Insets(1, 0, 0, 1));
                uploadedDateCheckbox.setName("uploadedDateCheckbox"); // NOI18N
                uploadedDateCheckbox.addChangeListener(new javax.swing.event.ChangeListener() {
                        public void stateChanged(javax.swing.event.ChangeEvent evt) {
                                uploadedDateCheckboxStateChanged(evt);
                        }
                });

                javax.swing.GroupLayout datePanelLayout = new javax.swing.GroupLayout(datePanel);
                datePanel.setLayout(datePanelLayout);
                datePanelLayout.setHorizontalGroup(
                        datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datePanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(takenDateCheckbox, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                                        .addComponent(uploadedDateCheckbox, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(takenDateFromSpinner, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(uploadedDateFromSpinner, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(uploadedDateSeparator)
                                        .addComponent(takenDateSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(takenDateTillSpinner)
                                        .addComponent(uploadedDateTillSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
                );
                datePanelLayout.setVerticalGroup(
                        datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(datePanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(datePanelLayout.createSequentialGroup()
                                                .addGroup(datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, datePanelLayout.createSequentialGroup()
                                                                .addGap(11, 11, 11)
                                                                .addComponent(takenDateSeparator))
                                                        .addComponent(takenDateTillSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                                                        .addComponent(takenDateFromSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(uploadedDateFromSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                                                        .addGroup(datePanelLayout.createSequentialGroup()
                                                                .addGap(9, 9, 9)
                                                                .addComponent(uploadedDateSeparator))
                                                        .addComponent(uploadedDateTillSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)))
                                        .addGroup(datePanelLayout.createSequentialGroup()
                                                .addComponent(takenDateCheckbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(uploadedDateCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                gpsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
                gpsPanel.setName("gpsPanel"); // NOI18N

                gpsLabel.setText(resourceMap.getString("gpsLabel.text")); // NOI18N
                gpsLabel.setName("gpsLabel"); // NOI18N

                gpsLatTextfield.setText(resourceMap.getString("gpsLatTextfield.text")); // NOI18N
                gpsLatTextfield.setName("gpsLatTextfield"); // NOI18N

                gpsLonTextfield.setText(resourceMap.getString("gpsLonTextfield.text")); // NOI18N
                gpsLonTextfield.setName("gpsLonTextfield"); // NOI18N

                gpsRadiusTextfield.setText(resourceMap.getString("gpsRadiusTextfield.text")); // NOI18N
                gpsRadiusTextfield.setName("gpsRadiusTextfield"); // NOI18N
                gpsRadiusTextfield.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusLost(java.awt.event.FocusEvent evt) {
                                numberTextFieldFocusLost(evt);
                        }
                });

                gpsLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                gpsLabel1.setText(resourceMap.getString("gpsLabel1.text")); // NOI18N
                gpsLabel1.setName("gpsLabel1"); // NOI18N

                gpsLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                gpsLabel2.setText(resourceMap.getString("gpsLabel2.text")); // NOI18N
                gpsLabel2.setName("gpsLabel2"); // NOI18N

                gpsLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                gpsLabel3.setText(resourceMap.getString("gpsLabel3.text")); // NOI18N
                gpsLabel3.setName("gpsLabel3"); // NOI18N

                javax.swing.GroupLayout gpsPanelLayout = new javax.swing.GroupLayout(gpsPanel);
                gpsPanel.setLayout(gpsPanelLayout);
                gpsPanelLayout.setHorizontalGroup(
                        gpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(gpsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(gpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(gpsPanelLayout.createSequentialGroup()
                                                .addComponent(gpsLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(gpsLatTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(gpsLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(gpsLonTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(gpsLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(gpsRadiusTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(gpsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(37, Short.MAX_VALUE))
                );

                gpsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {gpsLatTextfield, gpsLonTextfield});

                gpsPanelLayout.setVerticalGroup(
                        gpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gpsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(gpsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(14, 14, 14)
                                .addGroup(gpsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(gpsLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(gpsLatTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(gpsLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(gpsLonTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(gpsLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(gpsRadiusTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
                );

                keywordsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
                keywordsPanel.setName("keywordsPanel"); // NOI18N

                keywordsLabel.setText(resourceMap.getString("keywordsLabel.text")); // NOI18N
                keywordsLabel.setName("keywordsLabel"); // NOI18N

                keywordsTextfield.setText(resourceMap.getString("keywordsTextfield.text")); // NOI18N
                keywordsTextfield.setName("keywordsTextfield"); // NOI18N

                javax.swing.GroupLayout keywordsPanelLayout = new javax.swing.GroupLayout(keywordsPanel);
                keywordsPanel.setLayout(keywordsPanelLayout);
                keywordsPanelLayout.setHorizontalGroup(
                        keywordsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(keywordsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(keywordsLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(keywordsTextfield, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
                                .addContainerGap())
                );
                keywordsPanelLayout.setVerticalGroup(
                        keywordsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(keywordsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(keywordsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(keywordsLabel)
                                        .addComponent(keywordsTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
                this.setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(downloadProgressButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 646, Short.MAX_VALUE)
                                                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(horizontalSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 963, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(gpsPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(searchPhotosTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(perPageCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(keywordsPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(datePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(7, 7, 7)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(downloadOptionsTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(dimensionsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                                                        .addComponent(siftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(downloadFolderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE))))
                                .addContainerGap())
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(searchPhotosTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(perPageCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(downloadOptionsTitle))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(keywordsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(gpsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(datePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(downloadFolderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(siftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(dimensionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                                .addComponent(horizontalSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(downloadProgressButton)
                                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
                );

                layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {downloadProgressButton, searchButton});

        }// </editor-fold>//GEN-END:initComponents

    private void downloadFolderButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_downloadFolderButtonActionPerformed
    {//GEN-HEADEREND:event_downloadFolderButtonActionPerformed
	    String path = Dialog.askForPath(this, JFileChooser.DIRECTORIES_ONLY);
	    if(path != null) {
		    downloadFolderTextfield.setText(path);
	    }
    }//GEN-LAST:event_downloadFolderButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_searchButtonActionPerformed
    {//GEN-HEADEREND:event_searchButtonActionPerformed
	    try {
		    saveCurrentQuery();
		    
		    if(!imageSearch.getCurrentQuery().getKeywords().isEmpty()) {
			    BaccordApp.getApplication().changeScreen(ImagesSearchResults.class);
		    } else {
			    Dialog.error(this, "Please fill keyword to search");
		    }
		    
	    } catch (CannotCreateDirectoryException ex) {
		    Dialog.error(this, "Cannot create download directory");
	    } catch (PathMustBeDirectoryException ex) {
		    Dialog.error(this, "Download directory must be directory");
	    }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void downloadProgressButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_downloadProgressButtonActionPerformed
    {//GEN-HEADEREND:event_downloadProgressButtonActionPerformed
	    try {
		    saveCurrentQuery();
	    } catch (CannotCreateDirectoryException ex) {
		    Logger.getLogger(ImagesSearchQuery.class.getName()).log(Level.SEVERE, null, ex);
	    } catch (PathMustBeDirectoryException ex) {
		    Logger.getLogger(ImagesSearchQuery.class.getName()).log(Level.SEVERE, null, ex);
	    }
	    BaccordApp.getApplication().changeScreen(ImagesDownloadProgress.class);
    }//GEN-LAST:event_downloadProgressButtonActionPerformed

    private void resizeCheckboxStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_resizeCheckboxStateChanged
    {//GEN-HEADEREND:event_resizeCheckboxStateChanged
	    if(resizeCheckbox.isSelected()) {
		    widthTextField.setEnabled(true);
		    heightTextField.setEnabled(true);
	    } else {    
		    widthTextField.setEnabled(false);
		    heightTextField.setEnabled(false);
	    }
    }//GEN-LAST:event_resizeCheckboxStateChanged
    
    private void takenDateCheckboxStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_takenDateCheckboxStateChanged
    {//GEN-HEADEREND:event_takenDateCheckboxStateChanged
	    if(takenDateCheckbox.isSelected()) {
		    takenDateFromSpinner.setEnabled(true);
		    takenDateTillSpinner.setEnabled(true);
	    } else {    
		    takenDateFromSpinner.setEnabled(false);
		    takenDateTillSpinner.setEnabled(false);
	    }
    }//GEN-LAST:event_takenDateCheckboxStateChanged

    private void uploadedDateCheckboxStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_uploadedDateCheckboxStateChanged
    {//GEN-HEADEREND:event_uploadedDateCheckboxStateChanged
	    if(uploadedDateCheckbox.isSelected()) {
		    uploadedDateFromSpinner.setEnabled(true);
		    uploadedDateTillSpinner.setEnabled(true);
	    } else {    
		    uploadedDateFromSpinner.setEnabled(false);
		    uploadedDateTillSpinner.setEnabled(false);
	    }
    }//GEN-LAST:event_uploadedDateCheckboxStateChanged

    private void numberTextFieldFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_numberTextFieldFocusLost
    {//GEN-HEADEREND:event_numberTextFieldFocusLost
	    JTextField field = (JTextField) evt.getSource();
	    
	    // remove all non-digit characters
	    String str = field.getText();
	    Pattern p = Pattern.compile("\\D*");
	    str = p.matcher(str).replaceAll("");
	    if(str.isEmpty()) str = "0";
	    field.setText(str);
    }//GEN-LAST:event_numberTextFieldFocusLost

    private void perPageComboboxItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_perPageComboboxItemStateChanged
    {//GEN-HEADEREND:event_perPageComboboxItemStateChanged
	    imageSearch.getCurrentQuery().setResultsPerPage(
		    perPageRange[perPageCombobox.getSelectedIndex()]
	    );
    }//GEN-LAST:event_perPageComboboxItemStateChanged


        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JPanel datePanel;
        private javax.swing.JPanel dimensionsPanel;
        private javax.swing.JButton downloadFolderButton;
        private javax.swing.JLabel downloadFolderLabel;
        private javax.swing.JPanel downloadFolderPanel;
        private javax.swing.JTextField downloadFolderTextfield;
        private javax.swing.JLabel downloadOptionsTitle;
        private javax.swing.JButton downloadProgressButton;
        private javax.swing.JLabel gpsLabel;
        private javax.swing.JLabel gpsLabel1;
        private javax.swing.JLabel gpsLabel2;
        private javax.swing.JLabel gpsLabel3;
        private javax.swing.JTextField gpsLatTextfield;
        private javax.swing.JTextField gpsLonTextfield;
        private javax.swing.JPanel gpsPanel;
        private javax.swing.JTextField gpsRadiusTextfield;
        private javax.swing.JTextField heightTextField;
        private javax.swing.JSeparator horizontalSeparator;
        private javax.swing.JLabel keywordsLabel;
        private javax.swing.JPanel keywordsPanel;
        private javax.swing.JTextField keywordsTextfield;
        private javax.swing.JComboBox perPageCombobox;
        private javax.swing.JCheckBox resizeCheckbox;
        private javax.swing.JButton searchButton;
        private javax.swing.JLabel searchPhotosTitle;
        private javax.swing.JCheckBox siftCheckbox;
        private javax.swing.JPanel siftPanel;
        private javax.swing.JCheckBox takenDateCheckbox;
        private javax.swing.JSpinner takenDateFromSpinner;
        private javax.swing.JLabel takenDateSeparator;
        private javax.swing.JSpinner takenDateTillSpinner;
        private javax.swing.JCheckBox uploadedDateCheckbox;
        private javax.swing.JSpinner uploadedDateFromSpinner;
        private javax.swing.JLabel uploadedDateSeparator;
        private javax.swing.JSpinner uploadedDateTillSpinner;
        private javax.swing.JTextField widthTextField;
        private javax.swing.JLabel xLabel;
        // End of variables declaration//GEN-END:variables

}
